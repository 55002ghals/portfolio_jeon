[첫 PHP 어플리케이션]

-apache2/htdocs/에 php확장자를 가진 파일을 웹 브라우저에 불러오면
 컴파일 가능하다.

---------------------------------------
//helloworld.php
<?php
echo "Hello World!";
?>
--------------------------------------
->해당 내용을 위와 같은 과정으로 브라우저에 불러내면
 Hello World!가 출력된다.

-이때 HTML과 함께 웹 코드를 작성해보자.
------------------------------------------------
//helloworld2.php
<html>
<body>	
echo "Hello world!";
<?php
echo "Hello world!";
?>
</body>
</html>
-----------------------------------------------
->이는 

echo "Hello world!"; Hello world!

-이렇게 출력되고 페이지 소스는 다음과 같이 나온다.
---------------------------------------------
<html>
<body>	
echo "Hello world!";
Hello world!</body>
</html>
------------------------------------------
-이는 php코드 부분은 html과 다르게 출력부만 페이지 소스로서 취급해 출력한다.


※웹의 통신체계

1. 웹 브라우저에서 URL입력

2.운영체제(OS)에서 랜카드를 통해 외부로 정보를 전송

3. 서버의 운영체제로 요청한 정보가 도착한다.

4. (웹)서버는 해당 정보(파일)을 읽고 php는 php interpreter에게 보내지게 된다.(해석되는 과정에서 위 처럼 <?php~?>는 생략됨.)
   이 php가 해석되어 다른 HTML코드와 함께 서버로 이동. 서버는 다시 역순으로 정보를 송신하여 부라우저로 하여금
   출력값을 출력하도록 함.
                            ->요청한 데이터가 DB에 있다면 DB에 가서 정보를 가져오기도 해야함.


[숫자]
-----------------------------------
//number.php
<?php

var_dump(6);    //괄호안에 들어간 값의 data type을 출력해줌.
echo 6*2;        //이렇게 사칙연산도 가능 ㅇㅇ
?>
-----------------------------------

※var_dump의 반환값이 정수형이면 int, 실수형이면 float라고 뜸.


[문자]

-따옴표로 묶어야 문자(열)로 취급함.
------------------------------------------------
<?php
var_dump(1234);
var_dump('1234');
?>
------------------------------------------------

[문자의 결합(+가 아님!)]
----------------------------------------
<?php
echo"Hello"."World!";
echo"Hello"." "."World!"; //띄어쓰기 출력
?>
----------------------------------------
->"."을 이용해서 문자의 결합을 일으킬 수 있다.

----------------------------------------
<?php
// echo"그는" "안녕!" 이라고 말했다."; -> 오류 발생

echo"그는" '안녕!' 이라고 말했다."; 
//정상 출력!
echo"그는" \"안녕!\" 이라고 말했다."; 
//정상  출력!
?>
----------------------------------------
->문자열 안에 따옴표를 출력하기 위해선 위와 같이 2가지 방법이 있다.

[변수]
------------------------------------------
//variable.php
<html>
<body>
<?php
$a=1;                 //변수 a 선언+ 1로 초기화
echo $a+1; #2     //주석은 #
echo "<br />";    //HTML태그 실행가능하다.
$a=2;                //변수 a에 2 대입
print $a+1; #3
?>
</body>
</html>
------------------------------------------
-"$a=1" 처럼 변수를 선언하고, 이후에 변수를 호출할 때마다
 앞에 "$"를 필수적으로 붙여야한다.

-#으로 주석 표시하고, 여러줄 주석은 C와 같이 /**/로 한다.

----------------------------------------------
<html>
<body>
<?php
$first = "coding";
echo $first." everybody";
?>
</body>
</html>
-----------------------------------------------
-변수에 문자열 저장가능(JS마냥)

[상수]
---------------------------------------
<html>
<body>
<?php
define('TITLE',"php tutorial");
echo TITLE;
define('TITLE',"Java tutorial");   //error!!
?>
</html>
</body>
---------------------------------------

-TITLE을 상수로써 선언했으므로, TITLE은 다른 값으로 변경될 수 없다.
 때문에, define('TITLE',"Java tutorial"); 에서는 ERROR가 발생한다.

-시스템의 설정이나 고정적인 값을 정의할 때 사용함.

-상수는 대문자로 이름을 입력하는게 국룰


[데이터 타입 변경]
------------------------------------------------
<html>
<body>
<?php
$a = 100;
echo gettype($a);  //변수 a에 담긴 값의 데이터타입 출력
settype($a, 'double'); //a의 데이터타입을 실수형으로 변환
echo '<br />';
echo gettype($a);   
?>
</body>
</html>

*gettype($var)
 :var의 데이터 타입 반환

**settype($var, 'type')
  :var의 데이터 타입을 type형으로 형 전환.
--------------------------------------------------

--------------------------------------
e.g)데이터 타입의 활용
<html>
<body>
<?php
$a = 100;
if(is_int($a)){
	echo $a+200;    //$a가 int형일때만 해당 코드가 실행되도록 함.
}
?>
</body>
</html>

* is_int와 비슷한 역할을 하는API
----------------------------------------
is_ array
is_ bool
is_ callable
is_ double
is_ float
is_ int
is_ integer
is_ long
is_ null
is_ numeric
is_ object
is_ real
is_ resource
is_ scalar
is_ string
------------------------------------------
--------------------------------------------------------


[가변 변수]
-------------------------------
<html>
<body>
<?php
$title = 'subject';          //title이라는 변수에 'subject'라는 문자열 입력
$$title = 'PHP tutorial';  //title에 들어있는 값인 'subject'를 문자의 이름으로 하여 하나의 변수를 다시 선언
echo $subject;    //PHP tutorial 출력!
?>
</body>
</html>
--------------------------------
-이렇게 다이나믹하게 변수의 선언이 가능하다.

[비교연산자]

boolean
:데이터 타입; True 혹은 False를 담음.
------------------------------------------------------
<html>
<head>
</head>
<body>
<?php
echo '<br>';

var_dump("one"=="two");   //bool(false)출력!
var_dump(1==1);              //  bool(true)출력!
var_dump(1!=1);               //bool(false)출력!        

echo '<br>';

?>
</body>
</html>
---------------------------------------------------------

-JS에서도 나왔지만 여기에도 '==='일치연산자가 있다.

--------------------------------------------------------
echo "1 == '1' : ";
var_dump(1 == '1');                    //true!
echo "<br />1 === '1' : ";
var_dump(1 === '1');                  //false! 일치연산자는 var_dump도 비교하기 때문!
----------------------------------------------------------

-그 외 >=,<=,<,>


[입력과 출력]

-이전까지는 사용자의 입력을 받지 않았다. 여기서는 PHP 어플리케이션에
 입력하는 방법을 아라보자.

-----------------------------------------
<?php
echo $_GET['id'];
?>

*$_GET['key']
:key에 해당하는 value를 사용자로부터 받은 값으로 반환.
-----------------------------------------

->위 php코드를 그냥 브라우저에 불러내면 해당 오류가 발생한다.
"Notice: Undefined index: id in C:\Bitnami\sub\apache2\htdocs\example\INPUT.php on line 2"

-그렇다면 id값이 있어야한다는 말인데, 어떻게 사용자의 입력을 받을수 있을까?

-위 브라우저의 URL, "localhost.example.INPUT.php" 다음에 "?id=전명환" 이라고 치고
 다시 페이지를 불러와보자.
 
-우리의 입력값이 페이지에 출력되는 것을 볼수 있다.

-GET방식으로 정보를 가져올때, 'key=value'형식으로 파라미터를 이용해
 브라우저를 통해 서버로 정보를 입력받을 수 있다.

※여러개의 인자를 입력받기 위해선 &를 통해 구분한다.

 ex) ....?id=5502ghals&pw=tnqk12


[form]

-HTML에서 input태그로 이루어진 컨트롤은 모두 "입력 컨트롤"이라 한다.

--------------------------------------------
<html>
<body>
    <form method="get" action="2.php">
        id :  <input type="text" name="id" />
        password :  <input type="text" name="password" />
        <input type="submit" />
    </form>
</body>
</html>
---------------------------------------------

->id와 pw를 적어서 전송버튼을 누르면 파라미터에 "?id=5502ghals&pw=tnqk12"
   라고 적힌다.

-action속성의 주소로 form태그의 데이터가 전송된다.

[php의 해석 순서]

1. Client(웹 브라우저)에서 URL과 함께 요청
2. 서버는 HTML을 해석하다가 php는 자신이 해석할 수 없으므로 
   php Engine에게 php코드를 전달.
3. 이때 사용자로부터 받은 입력값도 함께 전달
4. 엔진은 해석하여 HTML로 재구성, 코드 삽입 뒤 웹 서버에게 재전달
5. 다시 웹 브라우저에게 송신, 웹 브라우저는 이를 출력.

[GET과 POST방식]

-GET방식은 파라미터를 이용한 데이터 전송이므로, URL에 다 드러남.

-POST는 파라미터에 적히지 않고 데이터를 전송할 수 있음.

※지금보면 HTML은 사용자의 정보를 송신하고, PHP는 수신하는 역할을 한다.
    ->즉, 전송이나, 송신방식은 HTML고 PHP가 동기화되어 맞춰야만 한다.
-------------------------------------------------
#POST_method_INPUT.php
<html>
<body>
    <form method="POST" action="4.php">
        id :  <input type="text" name="id" />
        password :  <input type="text" name="password" />
        <input type="submit" />
    </form>
</body>
</html>
------------------------------------------------
-참고로 그냥 summit눌러도 자동으로 POST_method_OUTPUT.php
 로 넘어가짐.
---------------------------------------------------
#POST_method_OUTPUT.php
<?php
echo $_POST['id'].','.$_POST['password'];
?> 
----------------------------------------------------

-POST는 어떻게 그게 가능할까?

-http 질의 응답 패킷을 보자.

-http 질의에서 body부분에 사용자의 입력값이 들어간다,
 파라미터에 들어가있는 그 부분이 body에 그대로 입력된다.
 그래서 굳이 파라미터에 써있지 않더라도 정보의 전달이 가능한 것이다.

-그럼 굳이 GET을 쓸 필요가 없지 않는가?

-우리가 게시판을 만들었을때, http://www.somesite/board/list에서 파라미터 값으로 게시물을
 구분한다고 하자. 이때 게시물 구분값을 POST값으로 받는다면, 어떤
 게시물에 가더라도 http://www.somesite/board/list에서 URL은 바뀌지 않을 것이고,
 이 URL을 복붙해 다른 곳에 링크를 남긴다면, 해당 링크는 사용자가
 원하는 게시물로 이어지지 못할 것이다. 그럴 때 GET을 사용한다.

[조건문]

-if문
-if-else if- else문

[논리 연산자]

-논리and연산자:
------------------------------------------------------
<?php
if (true and true) {
    echo 1;
}
if (true and false) {
    echo 2;
}
if (false && true) {
    echo 3;
}
if (false && false) {
    echo 4;
}
?>   
#1만 출력
--------------------------------------------------------
-> "&&"와"and"는 같은 의미이다.

-------------------------------------------------------
<?php
if($_POST['id'] === 'egoing' && $_POST['password'] === '111111'){
    echo 'right';
} else {
    echo 'wrong';
}
?>
-------------------------------------------------------
->조건문 2개를 이용해서 짤수도 있던 코드를 and연산을 통해 간결히 한 모습이다.


-논리OR연산자:
 얘는 그냥 or임!! "||" 이거 안씀!!!
--------------------------------------------------
<?php
if (true or true) {
    echo 1;
}
if (true or false) {
    echo 2;
}
if (false or true) {
    echo 3;
}
if (false or false) {
    echo 4;
}
?>
#123출력
----------------------------------------------

-NOT연산자:
 !

-응용
-----------------------------------------------
<?php
if(
    ($_POST['id'] === 'egoing' or $_POST['id'] === 'k8805' or $_POST['id'] === 'sorialgi')
    and
    $_POST['password'] === '111111'
){
    echo 'right';
} else {
    echo 'wrong';
}
?>
#아이디는 egoing, k8805, sorialgi 3개를 허용하고 비밀번호는 111111만을 허용하는 모습이다.
#저런 식으로 boolean값이 나오는 연산의 결과를 가지고 또다시 논리연산이 가능함을 항상 명심하자.
------------------------------------------------

[boolean의 특성]

-php에서의 boolean은 특이사항이있다.

-boolean의 데이터 타입에 다른 값이 들어갈때,
 0은 false이고, 그 외의 정수는 true로 형 변환이 된다.

-변수가 채워져있는지 아닌지를 판단하기위해
 isset(),is_null(),empty() 같은 함수를 이용하곤한다.

-이때 예상되는 출력값이 헷갈린다면 'php 형 변환 표'를 참고하도록 하자.
 구글링하라 이말이야

[반복문]
-while문, for문
-------------------------------------------------
<html>
<body>
<?php
$i=1
while($i<=5){
	echo"이번에는 ".$i."번 반복입니다~<br>";
	$i+=1
}
?>
</body>
</html>
------------------------------------------------------
<html>
<body>
<?php
for($i = 0; $i < 10; $i++){
    echo 'coding everybody'{$i}"<br />";
}
?>
</body>
</html>
#for문 예제, 변수의 출력"{}"이용
-----------------------------------------------------

-변수를 출력하고 싶을때 .'$var'. 같이 복잡하게 하지말고
 그냥 출력하고싶은 문자열(사실상 HTML코드) 중간에 {var}을 넣으면 된다.
 (for문 예제 처럼)


[함수]

[함수의 선언]
--------------------------------
<?php
function funcname(arg1,arg2,....){
	code...
	return rtn;
}
?>
--------------------------------
[함수의 호출]
-----------------------------
funcname();
-----------------------------
->HTML과 동일하다.(;괄호 꼭 있어야함!)

[함수의 입.출력]
-출력은 return 을 이용한 반환을 의미함

*print함수: 뒤에 나오는 말을 출력함(echo와 동일)
	ex)   print exfunction($arg);

-입력은 인자를 통해 전달받음. 

[인자의 기본값]

-----------------------------------
<?php
function get_arguments($arg1=100){
    return $arg1;
}
echo get_arguments(1);
echo ',';
echo get_arguments();
?>
------------------------------------

->위와같이 argument선언할때 default값을 지정할 수 있다.
   parameter가 없을시 argument는 해당값으로 치환된다.

※혹시몰라 말하지만 지역변수와 전역변수의 유효구간을 헷갈리지 말것!

[전역변수]
--------------------------------
<?php
$globvar=1;
   function locfunction(){
   	reurn globvar;
   	$globvar=2;
   }
   locfuntion();
   echo $globvar;
?>
----------------------------------

[배열]

-------------------------------
#배열의 선언
<?php
$member = ['egoing', 'k8805', 'sorialgi'];
?>
-------------------------------

->JS와 같이 저렇게 선언이 가능하다.
   index도 0,1,2... 국룰 따름.

-----------------------------------
<?php
$member = ['egoing', 'k8805', 'sorialgi'];
echo $member[0].'<br />';
echo $member[1].'<br />';
echo $member[2].'<br />';
?>
-----------------------------------

-함수의 반환값으로 배열의 형태도 가능하다.
---------------------------------------------------
<?php
function get_members(){
    return ['egoing', 'k8805', 'sorialgi'];
}
 
$tmp =  get_members();
echo $tmp[1];
 
# 이렇게도 가능하다! "echo get_members()[1];"
?>
-----------------------------------------------------

[배열과 반복문]
----------------------------------------------------
<?php
function get_members(){
    return ['egoing', 'k8805', 'sorialgi'];
}
 
$members = get_members();
 
for($i = 0; $i < count($members); $i++){
    echo ucfirst($members[$i]).'<br />';
}
 
?>

*count($member)
 :JS에서의 memeber.length메소드와 같음. 배열의 element의 갯수를 반환함.

*ucfirst($member[idx])
 :문자열의 첫 글자를 대문자로 바꿔서 반환
----------------------------------------------------

[배열의 조작]

-array_push
 :배열의 맨 끝에 추가
-----------------------------------
<?php
$arr = ['a', 'b', 'c', 'd', 'e'];
array_push($arr, 'f');      
var_dump($arr);

#abcdef 출력
?>
-----------------------------------

-array_unshift
 :배열의 맨 처음에 추가
-----------------------------------
<?php
$li = ['a', 'b', 'c', 'd', 'e'];
array_unshift($li,'z');
var_dump($li);
#zabcde출력
?>
-------------------------------------

-arrat_merge
 :배열의 맨 끝에 복수의 요소를 추가.
----------------------------------------
<?php
$li = ['a', 'b', 'c', 'd', 'e'];
$li = array_merge($li, ['f','g']);
var_dump($li);
?>
#abcdefg출력
-----------------------------------------


-array_shift
 :배열의 맨 첫 요소 제거
-------------------------------------
<?php
$li = ['a', 'b', 'c', 'd', 'e', 'z'];
array_shift($li);
var_dump($li);
#bcdez출력
?>
-------------------------------------

-array_pop
 :배열의 맨 끝 요소 제거
-------------------------------------
<?php
$li = ['a', 'b', 'c', 'd', 'e', 'z'];
array_pop($li);
var_dump($li);
#abcde출력
?>
-------------------------------------

-sort
 :ASCII코드순으로 배열 정렬

-rsort
 :ASCII역순 배열 정렬
-----------------------------------
<?php
$li = ['c','e','a','b','d'];
sort($li);
var_dump($li);
#abcde출력

rsort($li);
var_dump($li);
#edcba출력
?>
-------------------------------------


[연관배열]

:JS에서의 객체임.

-선언은 다음과 같이한다.
-------------------------------------
<?php
$grades = array('egoing'=>10, 'k8805'=>6, 'sorialgi'=>80);
echo $grade['k8805']
#6출력
?>
----------------------------------------

->오른쪽 문자열(이름)이 key, 그 곳에 할당된 값이 vlaue라 한다.

※1.JS에서의 객체는 콜론(:)으로 key를 지정했다면, 여기서는 "=>"이다.
  2. 일반적인 배열과는 다르게 []가 아니라 "array()"로 묶어서 연관 배열임을 말한다.

[배열의 열거]
-가장 JS랑 구분되어 헷갈린다고 생각한다.

--------------------------------------------------
<?php
$grades = array('egoing'=>10, 'k8805'=>6, 'sorialgi'=>80);
foreach($grades as $key => $value){
    echo "key: {$key} value:{$value}<br />";
}
?>
---------------------------------------------------

->foreach라고 이름이 따로 있다!
 
->위의 $key와 $value는 다른 변수명으로도 선언 가능하다.
    ex) foreach($grade as $name=>$score){
      	   echo"key:{$name} value:{$score}<br>"
         }

===============================================
+추가

$_SERVER["REMOTE_ADDR"]
-> 현재 접속중인 사용자의 아이피를 반환하는 함수임.


str_replace(
     1번째 인수 : 변경대상 문자
     2번째 인수 : 변경하려는 문자
     3번째 인수 : 변수, replace가 바꾸고자 하는 문자열(변수수)
)

e.g) str_replace("1","$",$member);
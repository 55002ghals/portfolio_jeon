[Click Jacking]

-Click Jacking은 웹 브라우저 화면에 출력되는 내용에 HTML,CSS,JS등과
 같이 화면 출력에 영향을 미치는 요소들을 이용하여 사용자의 눈을 속여
 사용자의 클릭을 유도하는 공격 방법이다.

-외부 리소스를 불러올 수 있는 
 태그 앨리먼트(<frame>,<iframe>,<object>,<embed>,<applet>)를 사용한다.

-사용자의 클릭을 유도하는 페이지를 구성 후, 그 페이지 위에 iframe등의 태그로 
 누르게 할 페이지를 로드한다. 그리고 CSS opacity(투명도)와 같이 사용자의 눈에는
 보이지 않도록 숨겨놓는 방법 들을 이용하여 공격을 할 수 있다. 사용자가 보는 
 페이지와 실제로 누르는 곳에 차이가 있는 이유는 iframe태그가 웹 브라우저 
 상에서는 더 위에 위치해 있기 때문에 클릭시 동작을 하게되는 원리이다.

[Mitigation]

-Click Jacking의 미티게이션은 X-Frame-Options와 Frame-ancestors 총 두가지
 방어법이 있다.
    -> 두 설정 모두 부모페이지의 URL을 제한하는 방식으로 클릭재킹을 방어한다.

1.X-Frame-Options

-HTTP응답 헤더를 통해 DENY와 SAMEORIGIN두개의 값으로 설정할 수 있다.

DENY: 부모 페이지 URL상관없이 모두 차단.

SAMEORIGIN: 부모 페이지 URL이 Same Origin이면 허용

예시:
X-Frame_Options: DENY

2.Frame-ancestors

-Content Security Policy(CSP)의 frame-ancdstors지시어를 통해 값을 설정할 수 있다.
 frame-ancestors 지시어는 CSP를 HTTP응답 헤더를 통해 설정해야하며 
 <meta>태그로는 설정할 수 없다.

------------------------------------------------------------------------------------
'none'
X-Frame-Options DENY와 동일

'self'
X-Frame-Options SAMEORIGIN과 동일

http://, https://
scheme이 같으면 모두 허용

*.dreamhack.io, dreamhack.io, https://dreamhack.io
host나 scheme+host가 같으면 모두 허용, 와일드카드(*)를 사용할 수 있음.
--------------------------------------------------------------------------------------

※CSP frame-ancestor를 사용하는 것을 비교적 권고함.



